// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/addresses/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/addresses">> = Specific
  const handler = {} as typeof import("../../app/account/addresses/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/dashboard">> = Specific
  const handler = {} as typeof import("../../app/account/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/orders">> = Specific
  const handler = {} as typeof import("../../app/account/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/payment/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/payment">> = Specific
  const handler = {} as typeof import("../../app/account/payment/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/preferences/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/preferences">> = Specific
  const handler = {} as typeof import("../../app/account/preferences/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/profile">> = Specific
  const handler = {} as typeof import("../../app/account/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/account/wishlist/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account/wishlist">> = Specific
  const handler = {} as typeof import("../../app/account/wishlist/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/login">> = Specific
  const handler = {} as typeof import("../../app/admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/forgot-password">> = Specific
  const handler = {} as typeof import("../../app/auth/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/login">> = Specific
  const handler = {} as typeof import("../../app/auth/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/register">> = Specific
  const handler = {} as typeof import("../../app/auth/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/verify-email/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/verify-email">> = Specific
  const handler = {} as typeof import("../../app/auth/verify-email/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/authenticity/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/authenticity">> = Specific
  const handler = {} as typeof import("../../app/authenticity/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/cart/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cart">> = Specific
  const handler = {} as typeof import("../../app/cart/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout">> = Specific
  const handler = {} as typeof import("../../app/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/checkout/success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout/success">> = Specific
  const handler = {} as typeof import("../../app/checkout/success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/collections/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/collections">> = Specific
  const handler = {} as typeof import("../../app/collections/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/cookie-policy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cookie-policy">> = Specific
  const handler = {} as typeof import("../../app/cookie-policy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/exclusive/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/exclusive">> = Specific
  const handler = {} as typeof import("../../app/exclusive/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/legal-notice/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/legal-notice">> = Specific
  const handler = {} as typeof import("../../app/legal-notice/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/limited-edition/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/limited-edition">> = Specific
  const handler = {} as typeof import("../../app/limited-edition/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/limited/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/limited">> = Specific
  const handler = {} as typeof import("../../app/limited/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/new-arrivals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/new-arrivals">> = Specific
  const handler = {} as typeof import("../../app/new-arrivals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy-policy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy-policy">> = Specific
  const handler = {} as typeof import("../../app/privacy-policy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/returns/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/returns">> = Specific
  const handler = {} as typeof import("../../app/returns/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/seller/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/seller">> = Specific
  const handler = {} as typeof import("../../app/seller/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/shipping/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/shipping">> = Specific
  const handler = {} as typeof import("../../app/shipping/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/size-guide/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/size-guide">> = Specific
  const handler = {} as typeof import("../../app/size-guide/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/sneakers/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sneakers/[id]">> = Specific
  const handler = {} as typeof import("../../app/sneakers/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/sneakers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sneakers">> = Specific
  const handler = {} as typeof import("../../app/sneakers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms-of-service/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms-of-service">> = Specific
  const handler = {} as typeof import("../../app/terms-of-service/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/test-cookies/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-cookies">> = Specific
  const handler = {} as typeof import("../../app/test-cookies/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/test-tailwind/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-tailwind">> = Specific
  const handler = {} as typeof import("../../app/test-tailwind/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products">> = Specific
  const handler = {} as typeof import("../../app/api/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/stripe/checkout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/stripe/checkout">> = Specific
  const handler = {} as typeof import("../../app/api/stripe/checkout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
